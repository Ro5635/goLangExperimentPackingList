# Creates the AWS Infrastructure for the static webpage
# The directory structure is strange here, this is the infrastructure for ../web_app
#
# CloudFront Distribution
# S3 Bucket
# DNS Configuration

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Mappings:
  environmentSpecificValues:
    'STUBACCOUNTID':
      environmentName: dev
      staticAssettsWebAppBucketname: packing-list-static-web
      packingListDomainName: packing-list.projects.robertcurran.uk

Resources:
  staticAssetsWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: 'PublicRead'
      BucketName: !FindInMap [environmentSpecificValues, "STUBACCOUNTID", staticAssettsWebAppBucketname]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        ErrorDocument: 404.html
        IndexDocument: index.html

  packingSiteCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !FindInMap [environmentSpecificValues, "STUBACCOUNTID", packingListDomainName]
        Origins:
          - DomainName: !Select [2, !Split ["/", !GetAtt staticAssetsWebsiteBucket.WebsiteURL]]
            Id: 'staticWebsiteSourceBucketOrigin'
            CustomOriginConfig:
              OriginProtocolPolicy: 'http-only'
        Enabled: true
        IPV6Enabled: true
        Comment: "Public Website Deployment packing list site"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
#        Logging:
#          IncludeCookies: 'false'
#          Bucket:
#          Prefix:
        DefaultCacheBehavior:
          TargetOriginId: 'staticWebsiteSourceBucketOrigin'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: 'false'
          ViewerProtocolPolicy: 'redirect-to-https'
          Compress: true
        # CloudFront price classes described at: http://aws.amazon.com/cloudfront/pricing/
        # At time of writing Price Class 100 is EU and North America
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !ImportValue environmentStack--RobertCurranUKSSLCertificateUSEast1
          MinimumProtocolVersion: 'TLSv1.2_2018'
          SslSupportMethod: 'sni-only'

  packingListSiteCloudFrontDomain:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: "A"
      Comment: 'Packing List website CloudFront Distribution'
      HostedZoneId: !ImportValue environmentStack--RobertCurranUKHostedZoneID
      Name: !FindInMap [environmentSpecificValues, "STUBACCOUNTID", packingListDomainName]
      AliasTarget:
        DNSName: !GetAtt [packingSiteCloudFrontDistribution, DomainName]
        # Z2FDTNDATAQYW2 is always the hosted zone ID when you create an alias record that apiRoutes traffic to a CloudFront distribution.
        # Because AWS is built with AWS. ðŸ¤¯
        HostedZoneId: Z2FDTNDATAQYW2
